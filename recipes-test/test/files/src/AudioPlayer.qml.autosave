import QtQuick 2.15
import QtQuick.Controls 2.15
import QtMultimedia 5.15
Item {
    visible: true
    width: 600
    height: 400
   

    Rectangle {
        anchors.fill: parent

        Column {
            spacing: 10

            Text {
                text: "Advanced Music Player"
                font.pixelSize: 24
                horizontalAlignment: Text.AlignHCenter
            }

            ListView {
                id: playlistView
                width: parent.width
                height: parent.height - 200
                model: PlaylistModel {
                    // Define your playlist here
                    PlaylistEntry { title: "Song 1"; source: "song1.mp3" }
                    PlaylistEntry { title: "Song 2"; source: "song2.mp3" }
                    // Add more songs as needed
                }

                delegate: Item {
                    width: parent.width
                    height: 50

                    Rectangle {
                        color: (currentIndex === index) ? "lightblue" : "transparent"
                        width: parent.width
                        height: 50

                        MouseArea {
                            anchors.fill: parent
                            onClicked: {
                                mediaPlayer.stop()
                                mediaPlayer.source = model.source
                                mediaPlayer.play()
                                playlistView.currentIndex = index
                            }
                        }

                        Text {
                            text: model.title
                            anchors.centerIn: parent
                        }
                    }
                }
            }

            Row {
                spacing: 10

                Button {
                    text: "Play"
                    onClicked: mediaPlayer.play()
                }

                Button {
                    text: "Pause"
                    onClicked: mediaPlayer.pause()
                }

                Button {
                    text: "Stop"
                    onClicked: mediaPlayer.stop()
                }

                Slider {
                    id: volumeSlider
                    width: 200
                    minimumValue: 0
                    maximumValue: 1
                    value: mediaPlayer.volume

                    onValueChanged: {
                        mediaPlayer.volume = value
                    }
                }
            }

            MediaPlayer {
                id: mediaPlayer
            }
        }
    }
}

// Define a simple PlaylistModel for your playlist entries
ListModel {
    id: playlistModel

    ListElement { title: "Song 1"; source: "song1.mp3" }
    ListElement { title: "Song 2"; source: "song2.mp3" }
    // Add more songs as needed
}

Component.onCompleted: {
    playlistView.currentIndex = 0; // Start playing the first song by default
}
